version: '3.5'

# Compose has commands for managing the whole lifecycle of your application:

# Start, stop, and rebuild services
# View the status of running services
# Stream the log output of running services
# Run a one-off command on a service

services:
  backend:
    image: mercury/openstack_report_backend:theta
    ports:
      - "3000:3000"
    secrets:
      - source: backend_secret
        target: /app/hgi-openrc.sh
      - source: tenants_secret
        target: /app/tenants_conf.yml
    networks: [app]

  frontend:
    image: mercury/openstack_report_frontend:theta
    depends_on:
      - backend
    command: "npm run serve -- --mode production"
    networks: [app]

  weaver:
    image: mercury/hgi-weaver:2.3.0
    secrets:
      - source: weaver_secret
        target: /srv/shiny-server/weaver/config.yml
    networks: [app]

  login-page:
    image: mercury/auth-login-page
    ports:
      - "9000:9000"
    networks: [app]

  nginx-ldap-auth-daemon:
    image: mercury/nginx-ldap-auth-daemon:test
    ports:
      - "8888:8888"
    networks: [app]

  gwas-frontend:
    image: mercury/gwasplots:1.9
    volumes:
      - type: bind
        source: /volume/img 
        target: /usr/src/app/build/data/img
    ports:
      - "3001:8080"
    environment:
      - NODE_ENV=production
    configs:
      - source: gwas_whitelist
        target: /usr/src/app/whitelist.js
    command: "node server.js"
    depends_on:
      - gwas-db
    networks: [app]

  gwas-db:
    image: mongo:bionic
    volumes:
      - type: bind
        source: /volume/data/db 
        target: /data/db
    networks: [app]
    deploy:
      placement:
        constraints:
          - "node.role==manager"

  scrna_db:
    # database for the scRNA webapp
    image: postgres:13.2
    restart: unless-stopped
    volumes:
      - /volume/scRNA_test_app/scrna_pgdata_folder/data:/var/lib/postgresql/data #change the @scrna_pgdata_folder/data to any route for the permenent data storage. data folder needs to be in here. If not existing, please create prior deployment
    env_file: scrna.env  
    networks: [app]
  
  scrna_web2:
    # scRNA application 
    image: mercury/scrna_web_browser:1.47
    volumes:
      - /volume/scRNA_test_app/scrna_static_and_media_files:/vol/web  #change the @scrna_static_and_media_files to any route for the permenent data storage. If not existing, please create prior deployment
      #- api_data:/app
    #entrypoint: ./scrna_entrypoint.sh
    depends_on:
      - scrna_db
    env_file: scrna.env
    ports: 
        - "3002:8081"  
    networks: [app]
    #deploy:
     # placement:
      #  constraints:
       #   - "node.role==manager"

  launcher-backend:
    # Cluster Launcher Backend
    image: mercury/cluster_launcher_backend:prod
    networks: [app]
    volumes:
     - /volume/clusters:/backend/clusters
    secrets:
     - source: mercury-key
       target: /root/.ssh/id_rsa
       mode: 0600
     - source: mercury-key-pub
       target: /backend/mercury-key.pub
     - source: backend_secret
       target: /backend/hgi-openrc.sh
     - source: tenants_secret
       target: /backend/tenants_conf.yml
    deploy:
      placement:
        constraints:
          - "node.role==manager"

  launcher-frontend:
    # Cluster Launcher Frontend
    image: mercury/cluster_launcher_frontend:prod
    networks: [app]
    depends_on: 
      - launcher_backend

  genestack-study-viewer:
    # Genestack Study Viewer
    image: mercury/genestack-study-viewer:1.3
    ports:
      - "3838:3838"
    networks: [app]
    env_file:
      - .genestack_study_viewer.env

  genestack-uploader:
    # Genestack Uploader App
    image: mercury/genestack-uploader:2.3.prod
    networks: [app]
    environment:
      GSSERVER: default
    configs:
      - source: genestack-config
        target: /root/.genestack.cfg
      - source: s3-config
        target: /root/.s3cfg
    secrets:
      - source: mercury-key
        target: /root/.ssh/id_rsa_genestack
        mode: 0600
      - source: mercury-key-pub
        target: /root/.ssh/id_rsa_genestack.pub

  nginx:
    image: nginx
    ports:
      - "443:443"
      - "80:8080"
    depends_on:
      - gwas-frontend
      - frontend
      - backend
      - weaver
      - login-page
      - nginx-ldap-auth-daemon
      - scrna_web2
      - scrna_db
      - launcher-backend
      - launcher-frontend
      - genestack-study-viewer
    configs:
      - source: nginx_config
        target: /etc/nginx/nginx.conf
      - source: ssl_cert
        target: /etc/ssl/certs/apps_hgi_sanger_ac_uk-cert.pem
      - source: ssl_key
        target: /etc/ssl/private/apps_hgi_sanger_ac_uk-key.pem
    networks: [app]
    deploy:
      placement:
        constraints:
          - "node.role==manager"    
    volumes:
      - /volume/scRNA_test_app/scrna_static_and_media_files:/vol/static #needed by scRNA webapp
      #- api_data:/app 

volumes:
  api_data:

secrets:
   backend_secret:
      file: hgi-openrc.sh
   weaver_secret:
      file: weaver-config.yml
   tenants_secret:
      file: tenants_conf.yml
   mercury-key:
      file: id_rsa
   mercury-key-pub:
      file: mercury-key.pub

configs:
   nginx_config:
      file: nginx.conf
   ssl_cert:
      file: apps_hgi_sanger_ac_uk-cert.pem
   ssl_key:
      file: apps_hgi_sanger_ac_uk-key.pem
   gwas_whitelist:
      file: gwas_whitelist.js
   genestack-config:
      file: genestack-uploader/.genestack.cfg
   s3-config:
      file: genestack-uploader/.s3cfg

networks:
  app:
    ipam:
      driver: default
###FIX ME: Subnet is breaking launching services###
#      config:
#      - subnet: 10.0.1.1/24
